// Copyright 2015 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Autogenerated by genmathops.py - do not edit

package jvm

import (
	"enjarify-go/jvm/scalars"
)

type unaryOpInfo struct {
	Op          uint8
	SrcT, DestT scalars.T
}
type binaryOpInfo struct {
	Op          uint8
	SrcT, Src2T scalars.T
}
type binary2OpInfo struct {
	Op uint8
}

var UNARY = map[uint8]unaryOpInfo{
	0x7B: unaryOpInfo{INEG, scalars.INT, scalars.INT},
	0x7C: unaryOpInfo{IXOR, scalars.INT, scalars.INT},
	0x7D: unaryOpInfo{LNEG, scalars.LONG, scalars.LONG},
	0x7E: unaryOpInfo{LXOR, scalars.LONG, scalars.LONG},
	0x7F: unaryOpInfo{FNEG, scalars.FLOAT, scalars.FLOAT},
	0x80: unaryOpInfo{DNEG, scalars.DOUBLE, scalars.DOUBLE},
	0x81: unaryOpInfo{I2L, scalars.INT, scalars.LONG},
	0x82: unaryOpInfo{I2F, scalars.INT, scalars.FLOAT},
	0x83: unaryOpInfo{I2D, scalars.INT, scalars.DOUBLE},
	0x84: unaryOpInfo{L2I, scalars.LONG, scalars.INT},
	0x85: unaryOpInfo{L2F, scalars.LONG, scalars.FLOAT},
	0x86: unaryOpInfo{L2D, scalars.LONG, scalars.DOUBLE},
	0x87: unaryOpInfo{F2I, scalars.FLOAT, scalars.INT},
	0x88: unaryOpInfo{F2L, scalars.FLOAT, scalars.LONG},
	0x89: unaryOpInfo{F2D, scalars.FLOAT, scalars.DOUBLE},
	0x8A: unaryOpInfo{D2I, scalars.DOUBLE, scalars.INT},
	0x8B: unaryOpInfo{D2L, scalars.DOUBLE, scalars.LONG},
	0x8C: unaryOpInfo{D2F, scalars.DOUBLE, scalars.FLOAT},
	0x8D: unaryOpInfo{I2B, scalars.INT, scalars.INT},
	0x8E: unaryOpInfo{I2C, scalars.INT, scalars.INT},
	0x8F: unaryOpInfo{I2S, scalars.INT, scalars.INT},
}
var BINARY = map[uint8]binaryOpInfo{
	0x90: binaryOpInfo{IADD, scalars.INT, scalars.INT},
	0x91: binaryOpInfo{ISUB, scalars.INT, scalars.INT},
	0x92: binaryOpInfo{IMUL, scalars.INT, scalars.INT},
	0x93: binaryOpInfo{IDIV, scalars.INT, scalars.INT},
	0x94: binaryOpInfo{IREM, scalars.INT, scalars.INT},
	0x95: binaryOpInfo{IAND, scalars.INT, scalars.INT},
	0x96: binaryOpInfo{IOR, scalars.INT, scalars.INT},
	0x97: binaryOpInfo{IXOR, scalars.INT, scalars.INT},
	0x98: binaryOpInfo{ISHL, scalars.INT, scalars.INT},
	0x99: binaryOpInfo{ISHR, scalars.INT, scalars.INT},
	0x9A: binaryOpInfo{IUSHR, scalars.INT, scalars.INT},
	0x9B: binaryOpInfo{LADD, scalars.LONG, scalars.LONG},
	0x9C: binaryOpInfo{LSUB, scalars.LONG, scalars.LONG},
	0x9D: binaryOpInfo{LMUL, scalars.LONG, scalars.LONG},
	0x9E: binaryOpInfo{LDIV, scalars.LONG, scalars.LONG},
	0x9F: binaryOpInfo{LREM, scalars.LONG, scalars.LONG},
	0xA0: binaryOpInfo{LAND, scalars.LONG, scalars.LONG},
	0xA1: binaryOpInfo{LOR, scalars.LONG, scalars.LONG},
	0xA2: binaryOpInfo{LXOR, scalars.LONG, scalars.LONG},
	0xA3: binaryOpInfo{LSHL, scalars.LONG, scalars.INT},
	0xA4: binaryOpInfo{LSHR, scalars.LONG, scalars.INT},
	0xA5: binaryOpInfo{LUSHR, scalars.LONG, scalars.INT},
	0xA6: binaryOpInfo{FADD, scalars.FLOAT, scalars.FLOAT},
	0xA7: binaryOpInfo{FSUB, scalars.FLOAT, scalars.FLOAT},
	0xA8: binaryOpInfo{FMUL, scalars.FLOAT, scalars.FLOAT},
	0xA9: binaryOpInfo{FDIV, scalars.FLOAT, scalars.FLOAT},
	0xAA: binaryOpInfo{FREM, scalars.FLOAT, scalars.FLOAT},
	0xAB: binaryOpInfo{DADD, scalars.DOUBLE, scalars.DOUBLE},
	0xAC: binaryOpInfo{DSUB, scalars.DOUBLE, scalars.DOUBLE},
	0xAD: binaryOpInfo{DMUL, scalars.DOUBLE, scalars.DOUBLE},
	0xAE: binaryOpInfo{DDIV, scalars.DOUBLE, scalars.DOUBLE},
	0xAF: binaryOpInfo{DREM, scalars.DOUBLE, scalars.DOUBLE},
	0xB0: binaryOpInfo{IADD, scalars.INT, scalars.INT},
	0xB1: binaryOpInfo{ISUB, scalars.INT, scalars.INT},
	0xB2: binaryOpInfo{IMUL, scalars.INT, scalars.INT},
	0xB3: binaryOpInfo{IDIV, scalars.INT, scalars.INT},
	0xB4: binaryOpInfo{IREM, scalars.INT, scalars.INT},
	0xB5: binaryOpInfo{IAND, scalars.INT, scalars.INT},
	0xB6: binaryOpInfo{IOR, scalars.INT, scalars.INT},
	0xB7: binaryOpInfo{IXOR, scalars.INT, scalars.INT},
	0xB8: binaryOpInfo{ISHL, scalars.INT, scalars.INT},
	0xB9: binaryOpInfo{ISHR, scalars.INT, scalars.INT},
	0xBA: binaryOpInfo{IUSHR, scalars.INT, scalars.INT},
	0xBB: binaryOpInfo{LADD, scalars.LONG, scalars.LONG},
	0xBC: binaryOpInfo{LSUB, scalars.LONG, scalars.LONG},
	0xBD: binaryOpInfo{LMUL, scalars.LONG, scalars.LONG},
	0xBE: binaryOpInfo{LDIV, scalars.LONG, scalars.LONG},
	0xBF: binaryOpInfo{LREM, scalars.LONG, scalars.LONG},
	0xC0: binaryOpInfo{LAND, scalars.LONG, scalars.LONG},
	0xC1: binaryOpInfo{LOR, scalars.LONG, scalars.LONG},
	0xC2: binaryOpInfo{LXOR, scalars.LONG, scalars.LONG},
	0xC3: binaryOpInfo{LSHL, scalars.LONG, scalars.INT},
	0xC4: binaryOpInfo{LSHR, scalars.LONG, scalars.INT},
	0xC5: binaryOpInfo{LUSHR, scalars.LONG, scalars.INT},
	0xC6: binaryOpInfo{FADD, scalars.FLOAT, scalars.FLOAT},
	0xC7: binaryOpInfo{FSUB, scalars.FLOAT, scalars.FLOAT},
	0xC8: binaryOpInfo{FMUL, scalars.FLOAT, scalars.FLOAT},
	0xC9: binaryOpInfo{FDIV, scalars.FLOAT, scalars.FLOAT},
	0xCA: binaryOpInfo{FREM, scalars.FLOAT, scalars.FLOAT},
	0xCB: binaryOpInfo{DADD, scalars.DOUBLE, scalars.DOUBLE},
	0xCC: binaryOpInfo{DSUB, scalars.DOUBLE, scalars.DOUBLE},
	0xCD: binaryOpInfo{DMUL, scalars.DOUBLE, scalars.DOUBLE},
	0xCE: binaryOpInfo{DDIV, scalars.DOUBLE, scalars.DOUBLE},
	0xCF: binaryOpInfo{DREM, scalars.DOUBLE, scalars.DOUBLE},
}
var BINARY_LIT = map[uint8]binary2OpInfo{
	0xD0: binary2OpInfo{IADD},
	0xD1: binary2OpInfo{ISUB},
	0xD2: binary2OpInfo{IMUL},
	0xD3: binary2OpInfo{IDIV},
	0xD4: binary2OpInfo{IREM},
	0xD5: binary2OpInfo{IAND},
	0xD6: binary2OpInfo{IOR},
	0xD7: binary2OpInfo{IXOR},
	0xD8: binary2OpInfo{IADD},
	0xD9: binary2OpInfo{ISUB},
	0xDA: binary2OpInfo{IMUL},
	0xDB: binary2OpInfo{IDIV},
	0xDC: binary2OpInfo{IREM},
	0xDD: binary2OpInfo{IAND},
	0xDE: binary2OpInfo{IOR},
	0xDF: binary2OpInfo{IXOR},
	0xE0: binary2OpInfo{ISHL},
	0xE1: binary2OpInfo{ISHR},
	0xE2: binary2OpInfo{IUSHR},
}
